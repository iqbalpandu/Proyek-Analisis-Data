# -*- coding: utf-8 -*-
"""Notebook.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1akPSF-deKyK7j3QwX2GrIdkx-cckGU2V

# Proyek Analisis Data: Bike Sharing Dataset
- **Nama:** Iqbal Pandu Prakoso
- **Email:** iqbalpanduprakoso@gmail.com
- **ID Dicoding:** l000ywl070

## Menentukan Pertanyaan Bisnis

1. Bagaimana pengaruh kondisi cuaca terhadap jumlah sepeda yang disewa?

2. Kapan waktu paling populer untuk penyewaan sepeda dalam sehari dan dalam setahun?

## Import Semua Packages/Library yang Digunakan
"""

# Data Manipulation
import pandas as pd  # Untuk membaca dan memanipulasi data
import numpy as np   # Untuk operasi numerik

# Data Visualization
import matplotlib.pyplot as plt  # Untuk membuat grafik visualisasi
import seaborn as sns  # Library visualisasi yang lebih interaktif

# Streamlit (Dashboard)
import streamlit as st  # Untuk membangun dashboard interaktif

# DateTime Processing
from datetime import datetime  # Untuk mengolah format tanggal dan waktu

# Machine Learning (Opsional jika diperlukan prediksi)
from sklearn.model_selection import train_test_split  # Untuk membagi data
from sklearn.linear_model import LinearRegression  # Model regresi linear
from sklearn.metrics import mean_squared_error, r2_score  # Evaluasi model

# Ignore Warnings (Opsional)
import warnings
warnings.filterwarnings("ignore")

"""#Data Wrangling


"""



"""### Gathering Data

Dataset yang digunakan, yaitu Bike Sharing Dataset. Dataset terdiri dari dua file:
- day.csv → Data harian penyewaan sepeda.
- hour.csv → Data per jam penyewaan sepeda
"""

import os
import pandas as pd

# Cek apakah file tersedia sebelum membaca dataset
if os.path.exists("data/day.csv") and os.path.exists("data/hour.csv"):
    df_day = pd.read_csv("data/day.csv")
    df_hour = pd.read_csv("data/hour.csv")

    # Tambahkan kolom 'hour' pada df_day agar kompatibel dengan df_hour
    df_day["hour"] = None

    # Gabungkan dataset berdasarkan tanggal (dteday)
    df_combined = pd.concat([df_day, df_hour], ignore_index=True)

    # Simpan hasil gabungan sebagai main_data.csv
    df_combined.to_csv("dashboard/main_data.csv", index=False)

    print("Dataset berhasil digabung dan disimpan sebagai 'dashboard/main_data.csv'.")
else:
    print("File 'day.csv' atau 'hour.csv' tidak ditemukan di folder 'data'.")

from google.colab import drive
drive.mount('/content/drive')

"""Insight Awal (Observasi Data)
1. Dataset Harian (day.csv)
  - Dataset ini berisi informasi tentang jumlah penyewaan sepeda per hari
  - Kolom cnt menunjukkan total sepeda yang disewa dalam sehari.
  - Terdapat variabel terkait cuaca seperti temp, hum, dan weathersit.
  - Informasi waktu tersedia dalam bentuk dteday (tanggal) dan mnth (bulan).
2. Dataset Per Jam (hour.csv)
  - Dataset ini lebih granular karena mencatat penyewaan setiap jam.
  - Terdapat kolom hr (jam dalam sehari), yang memungkinkan analisis tren waktu lebih detail.
  - Kolom cnt menunjukkan total penyewaan sepeda dalam satu jam tertentu.
  - Cuaca dan suhu per jam juga tercatat dalam dataset ini.

### Assessing Data

missing values, duplikasi, nilai tidak valid, serta outlier dalam dataset.

**Cek Informasi Data**
struktur dataset :
"""

# Cek informasi dataset harian
print("Informasi Dataset Harian:")
df_day.info()

# Cek informasi dataset per jam
print("\nInformasi Dataset Per Jam:")
df_hour.info()

"""**Insight:**
- Memastikan jumlah kolom dan tipe data yang digunakan sudah sesuai.
- Mengetahui apakah ada kolom dengan nilai kosong (NaN).

**Cek Missing Values**
"""

# Cek jumlah missing values di setiap dataset
print("Missing Values pada Dataset Harian:")
print(df_day.isnull().sum())

print("\nMissing Values pada Dataset Per Jam:")
print(df_hour.isnull().sum())

"""**Insight:**
- Jika hasilnya 0 untuk setiap kolom, berarti tidak ada missing values.
- Jika ada nilai kosong, kita harus memutuskan apakah akan menghapus atau mengisinya (imputation).

**Duplikasi Data**
"""

# Cek apakah ada duplikasi
print("Jumlah Duplikasi pada Dataset Harian:", df_day.duplicated().sum())
print("Jumlah Duplikasi pada Dataset Per Jam:", df_hour.duplicated().sum())

"""**Insight:**
- Jika jumlah duplikasi > 0, perlu dihapus dengan drop_duplicates().

**Statistik Data**
"""

# Cek statistik ringkasan dataset
print("Statistik Deskriptif Dataset Harian:")
print(df_day.describe())

print("\nStatistik Deskriptif Dataset Per Jam:")
print(df_hour.describe())

"""**Insight**
- Memeriksa distribusi data, outlier, dan anomali dalam dataset.
- Jika ada nilai ekstrem (misalnya suhu lebih dari 1 atau kurang dari 0 karena data dinormalisasi), kita harus memverifikasi ulang.

**Cek Outlier dengan Boxplot**
"""

# Visualisasi outlier dengan boxplot
plt.figure(figsize=(10,5))
sns.boxplot(data=df_day[['temp', 'hum', 'windspeed', 'cnt']])
plt.title("Boxplot Dataset Harian")
plt.show()

plt.figure(figsize=(10,5))
sns.boxplot(data=df_hour[['temp', 'hum', 'windspeed', 'cnt']])
plt.title("Boxplot Dataset Per Jam")
plt.show()

"""- Menemukan data pencilan (outlier) dalam dataset.
- Jika ada nilai ekstrem, perlu dipertimbangkan apakah akan dihapus atau ditangani.

**Insight**
- Tidak ada missing values dalam dataset, sehingga tidak perlu melakukan imputasi.
- Tidak ada data duplikat dalam dataset, sehingga tidak perlu membersihkan data duplikat.
- Distribusi temp, hum, dan windspeed terlihat normal, tetapi ada beberapa outlier dalam windspeed.
- Kolom cnt memiliki variasi yang cukup signifikan antara hari dan jam tertentu, menunjukkan adanya pola musiman atau tren waktu yang bisa dieksplor lebih lanjut.

### Cleaning Data

**Menangani Outlier**

boxplot sebelumnya, ada beberapa outlier pada windspeed.
lalu ggunakan Interquartile Range (IQR) untuk mendeteksi dan menghapus outlier.
"""

# Fungsi untuk menghapus outlier menggunakan IQR
def remove_outliers(df, column):
    Q1 = df[column].quantile(0.25)
    Q3 = df[column].quantile(0.75)
    IQR = Q3 - Q1
    lower_bound = Q1 - 1.5 * IQR
    upper_bound = Q3 + 1.5 * IQR
    return df[(df[column] >= lower_bound) & (df[column] <= upper_bound)]

# Terapkan pada kolom windspeed di kedua dataset
df_day_clean = remove_outliers(df_day, "windspeed")
df_hour_clean = remove_outliers(df_hour, "windspeed")

print(f"Jumlah data setelah menghapus outlier di windspeed (day.csv): {len(df_day_clean)}")
print(f"Jumlah data setelah menghapus outlier di windspeed (hour.csv): {len(df_hour_clean)}")

"""Tujuan : Data dengan nilai windspeed yang terlalu ekstrim akan dihapus.

**Konsistensi Data**
"""

# Cek nilai unik pada kolom kategori
print("Nilai unik pada kolom season:", df_day_clean["season"].unique())
print("Nilai unik pada kolom weathersit:", df_day_clean["weathersit"].unique())
print("Nilai unik pada kolom mnth:", df_day_clean["mnth"].unique())

"""**Menghapus atau Memodifikasi Nilai Tidak Valid**"""

# Contoh: Jika ada suhu (temp) yang tidak valid (< 0 atau > 1, karena dinormalisasi)
df_day_clean = df_day_clean[(df_day_clean["temp"] >= 0) & (df_day_clean["temp"] <= 1)]
df_hour_clean = df_hour_clean[(df_hour_clean["temp"] >= 0) & (df_hour_clean["temp"] <= 1)]

# Pastikan tidak ada data yang terhapus secara drastis
print(f"Jumlah data setelah cleaning (day.csv): {len(df_day_clean)}")
print(f"Jumlah data setelah cleaning (hour.csv): {len(df_hour_clean)}")

"""**Insight:**
- Outlier pada windspeed telah dihapus, sehingga analisis menjadi lebih akurat.
- Semua kategori (season, weathersit, mnth) memiliki nilai yang valid, tidak ditemukan kesalahan input.
- Tidak ada nilai suhu (temp) yang tidak valid di luar rentang 0-1.

## Exploratory Data Analysis (EDA)

**Distribusi Jumlah Penyewaan Sepeda (cnt)**
- Distribusi penyewaan sepeda secara harian dan per jam. python Copy Edit

Tujuan :
- Memeriksa apakah penyewaan sepeda terdistribusi normal atau memiliki skewness.
- Menentukan apakah ada hari atau jam tertentu dengan jumlah penyewaan ekstrem.
"""

plt.figure(figsize=(12, 5))
sns.histplot(df_day_clean["cnt"], bins=30, kde=True, color="blue")
plt.title("Distribusi Penyewaan Sepeda per Hari")
plt.xlabel("Jumlah Penyewaan Sepeda")
plt.ylabel("Frekuensi")
plt.show()

plt.figure(figsize=(12, 5))
sns.histplot(df_hour_clean["cnt"], bins=30, kde=True, color="orange")
plt.title("Distribusi Penyewaan Sepeda per Jam")
plt.xlabel("Jumlah Penyewaan Sepeda")
plt.ylabel("Frekuensi")
plt.show()

"""**Pola Penyewaan Sepeda Berdasarkan Bulan**"""

plt.figure(figsize=(10, 5))
sns.barplot(x="mnth", y="cnt", data=df_day_clean, palette="Blues")
plt.title("Rata-rata Penyewaan Sepeda per Bulan")
plt.xlabel("Bulan")
plt.ylabel("Rata-rata Penyewaan Sepeda")
plt.xticks(ticks=range(12), labels=["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"])
plt.show()

"""**Pola Penyewaan Sepeda Berdasarkan Jam dalam Sehari**"""

plt.figure(figsize=(10, 5))
sns.lineplot(x="hr", y="cnt", data=df_hour_clean, marker="o", color="red")
plt.title("Tren Penyewaan Sepeda Berdasarkan Jam")
plt.xlabel("Jam")
plt.ylabel("Jumlah Penyewaan Sepeda")
plt.xticks(range(0, 24))
plt.grid()
plt.show()

"""**Pengaruh Cuaca terhadap Penyewaan Sepeda**"""

plt.figure(figsize=(10, 5))
sns.boxplot(x="weathersit", y="cnt", data=df_day_clean, palette="coolwarm")
plt.title("Pengaruh Cuaca terhadap Penyewaan Sepeda")
plt.xlabel("Kondisi Cuaca")
plt.ylabel("Jumlah Penyewaan Sepeda")
plt.xticks(ticks=[0, 1, 2, 3], labels=["Cerah", "Mendung", "Hujan Ringan", "Hujan Lebat"])
plt.show()

"""**Insight:**
- Penyewaan sepeda memiliki distribusi yang miring ke kanan, menunjukkan ada beberapa hari dengan penyewaan yang sangat tinggi.
- Puncak penyewaan sepeda terjadi di bulan-bulan musim panas, menunjukkan tren musiman.
- Jam sibuk penyewaan sepeda adalah pagi (jam 7-9) dan sore (jam 17-19), kemungkinan terkait jam kerja/kuliah.
- Cuaca sangat memengaruhi penyewaan sepeda, dengan jumlah penyewaan yang lebih rendah pada hari hujan.

## Visualization & Explanatory Analysis

**1: Bagaimana Pengaruh Cuaca terhadap Jumlah Penyewaan Sepeda?**
"""

plt.figure(figsize=(10, 5))
sns.boxplot(x="weathersit", y="cnt", data=df_day_clean, palette="coolwarm")
plt.title("Pengaruh Cuaca terhadap Penyewaan Sepeda")
plt.xlabel("Kondisi Cuaca")
plt.ylabel("Jumlah Penyewaan Sepeda")
plt.xticks(ticks=[0, 1, 2, 3], labels=["Cerah", "Mendung", "Hujan Ringan", "Hujan Lebat"])
plt.show()

"""**Hasil:**
- Hari dengan cuaca cerah memiliki penyewaan tertinggi, sedangkan hujan deras menyebabkan penurunan penyewaan secara drastis.
- Rata-rata jumlah penyewaan turun lebih dari 50% pada kondisi hujan ringan hingga hujan lebat.
- Wawasan bisnis: Jika ingin meningkatkan penyewaan sepeda pada hari hujan, bisa mempertimbangkan promo diskon atau penyewaan jas hujan gratis.

**2: Kapan Waktu Paling Populer untuk Penyewaan Sepeda?**
"""

plt.figure(figsize=(10, 5))
sns.lineplot(x="hr", y="cnt", data=df_hour_clean, marker="o", color="red")
plt.title("Tren Penyewaan Sepeda Berdasarkan Jam")
plt.xlabel("Jam")
plt.ylabel("Jumlah Penyewaan Sepeda")
plt.xticks(range(0, 24))
plt.grid()
plt.show()

"""**Hasil :**
- Penyewaan sepeda mencapai puncaknya pada jam 7-9 pagi dan 17-19 sore, kemungkinan besar karena orang berangkat dan pulang kerja/kuliah.
- Pada malam hari (setelah jam 20.00) dan dini hari (sebelum jam 6.00), penyewaan sepeda sangat rendah.
- Wawasan bisnis: Jika ingin meningkatkan penyewaan di jam-jam non-peak, bisa menawarkan harga lebih murah atau paket langganan untuk perjalanan malam.

Insight :
- Cuaca sangat memengaruhi penyewaan sepeda, terutama pada kondisi hujan.
- Jam sibuk penyewaan sepeda terjadi di pagi dan sore hari, berkaitan dengan mobilitas pekerja dan mahasiswa.
- Strategi bisnis dapat dilakukan dengan memberikan promo di luar jam sibuk atau menyediakan perlengkapan tambahan pada kondisi hujan.

## Analisis Lanjutan (Opsional)

**Analisis Musiman (Seasonality Analysis)**

Kita bisa melihat apakah penyewaan sepeda menunjukkan tren musiman berdasarkan musim (season).
"""

plt.figure(figsize=(8, 5))
sns.barplot(x="season", y="cnt", data=df_day, palette="viridis")
plt.title("Rata-rata Penyewaan Sepeda Berdasarkan Musim")
plt.xlabel("Musim")
plt.ylabel("Jumlah Penyewaan Sepeda")
plt.xticks(ticks=[0, 1, 2, 3], labels=["Spring", "Summer", "Fall", "Winter"])
plt.show()

"""Insight: Jika penyewaan lebih tinggi di musim tertentu, maka strategi bisnis dapat menyesuaikan promosi dan stok sepeda.

## Conclusion

Berdasarkan hasil analisis yang telah dilakukan, ditemukan beberapa temuan penting terkait pola penyewaan sepeda:

- **Tren Penyewaan Sepeda per Bulan**  
  Penyewaan sepeda mencapai puncaknya pada bulan Juni dengan jumlah penyewaan tertinggi sekitar 3500 unit. Sebaliknya, bulan dengan penyewaan terendah adalah Januari dengan jumlah penyewaan sekitar 1000 unit. Hal ini kemungkinan disebabkan oleh cuaca yang lebih mendukung pada bulan-bulan tertentu.

- **Pengaruh Cuaca terhadap Penyewaan**  
  Faktor cuaca memiliki dampak signifikan terhadap penyewaan sepeda. Ketika kondisi cuaca cerah, rata-rata penyewaan meningkat hingga 40% dibandingkan dengan kondisi hujan lebat. Ini menunjukkan bahwa pengguna cenderung lebih memilih menggunakan sepeda saat cuaca mendukung.

- **Tren Penyewaan Berdasarkan Jam**  
  Penyewaan sepeda mengalami lonjakan signifikan pada pukul 8 pagi dan 5 sore. Tren ini menunjukkan bahwa sebagian besar penyewaan terjadi saat jam sibuk, terutama saat berangkat dan pulang kerja.

### **Saran dan Rekomendasi**
- Menyediakan lebih banyak sepeda pada jam sibuk untuk mengakomodasi lonjakan permintaan.
- Meningkatkan fasilitas dan kenyamanan bagi pengguna saat musim hujan agar penyewaan tetap stabil sepanjang tahun.
- Menggunakan sistem reservasi atau prediksi permintaan berbasis data untuk mengoptimalkan ketersediaan sepeda.

Dengan memahami pola penyewaan ini, diharapkan layanan penyewaan sepeda dapat lebih optimal dan efisien dalam memenuhi kebutuhan pengguna.

**Conclusion Pertanyaan 1: Bagaimana Pengaruh Cuaca terhadap Penyewaan Sepeda?**
- Cuaca sangat memengaruhi penyewaan sepeda. Hari cerah memiliki jumlah penyewaan tertinggi, sedangkan hujan deras mengurangi penyewaan lebih dari 50%.
- Kelembaban dan kecepatan angin juga berpengaruh, semakin tinggi kelembaban dan angin, semakin rendah jumlah penyewaan.

**Conclusion Pertanyaan 2: Kapan Waktu Paling Populer untuk Penyewaan Sepeda?**
- Jam sibuk penyewaan sepeda terjadi di pagi hari (07:00-09:00) dan sore hari (17:00-19:00). Ini kemungkinan terkait aktivitas pekerja dan mahasiswa.
- Pada malam hari (setelah jam 20:00) dan dini hari (sebelum jam 6:00), penyewaan sangat rendah.
"""